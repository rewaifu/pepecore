name: Release

on:
  workflow_dispatch:
    inputs:
      upload_to_internal_index:
        description: 'Upload wheels to internal index'
        required: false
        type: boolean
        default: false

concurrency:
  group: release-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  python-macos:
    name: Build Python (macOS)
    runs-on: macos-latest
    strategy:
      matrix:
        target: [ x86_64, aarch64 ]
    steps:
      - uses: actions/checkout@v4

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo build outputs
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-${{ matrix.target }}-

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Maturin build
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          working-directory: crates/pepecore-py-bindings
          container: 'off'

      - name: Upload Python wheels
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: wheels-macos-${{ matrix.target }}
          path: crates/pepecore-py-bindings/dist

  python-linux:
    name: Build Python (Linux)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ x86_64, x86, aarch64, armv7, s390x, ppc64le ]
    steps:
      - uses: actions/checkout@v4

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo build outputs
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-${{ matrix.target }}-

      - name: Maturin build
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          working-directory: crates/pepecore-py-bindings
          manylinux: 'auto'

      - name: Upload Python wheels
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: wheels-linux-${{ matrix.target }}
          path: crates/pepecore-py-bindings/dist

  python-windows:
    name: Build Python (Windows)
    runs-on: windows-latest
    strategy:
      matrix:
        target: [ x64, x86 ]
    steps:
      - uses: actions/checkout@v4

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            C:\Users\runneradmin\.cargo\registry\index
            C:\Users\runneradmin\.cargo\registry\cache
            C:\Users\runneradmin\.cargo\git\db
          key: windows-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo build outputs
        uses: actions/cache@v4
        with:
          path: target
          key: windows-cargo-target-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            windows-cargo-target-${{ matrix.target }}-

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: ${{ matrix.target }}

      - name: Maturin build
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          working-directory: crates/pepecore-py-bindings

      - name: Upload Python wheels
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: wheels-windows-${{ matrix.target }}
          path: crates/pepecore-py-bindings/dist

  python-pypi-upload:
    name: Upload to PyPI
    needs:
      - python-macos
      - python-linux
      - python-windows
    runs-on: ubuntu-latest
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          path: wheels
          pattern: wheels-*
          merge-multiple: true

      - name: Upload to PyPI
        if: ${{ github.ref == 'refs/heads/main' && !github.event.inputs.upload_to_internal_index }}
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          working-directory: wheels
          command: upload
          args: ./*.whl

      - name: Upload to internal index
        if: ${{ github.event.inputs.upload_to_internal_index }}
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_REPOSITORY: rewaifu
          MATURIN_REPOSITORY_URL: https://pypi.shd.llc/rewaifu/stable
          MATURIN_USERNAME: ${{ secrets.PYPI_LOGIN }}
          MATURIN_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        with:
          working-directory: wheels
          command: upload
          args: ./*.whl
